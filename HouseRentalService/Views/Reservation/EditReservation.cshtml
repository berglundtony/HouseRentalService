@model HouseRentalService.Models.MakeReservation

@{
    ViewBag.Title = "Edit reservation";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Reservation</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ReservationID)
    @Html.HiddenFor(model => model.CustomerID)

    <div class="form-group">
        @Html.LabelFor(model => model.ReservationID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 abovetext">
            @Html.DisplayFor(model => model.ReservationID, new { htmlAttributes = new { @class = "form-control textfield" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HouseID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="hidden" id="HouseID" />
            @Html.DropDownListFor(model => model.HouseID, Model.DropdownHouseType, "-- Choose house type --", htmlAttributes: new { @class = "form-control", @onChange = "SelectedValue(this)" })
            @Html.ValidationMessageFor(model => model.HouseID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PersonalNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 abovetext">
            @Html.DisplayFor(model => model.PersonalNo, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 abovetext">
            @Html.DisplayFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NumberOfDays, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumberOfDays, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumberOfDays, "", new { @class = "text-danger" })
        </div>
    </div>
    @Html.HiddenFor(x => x.Date)
    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-append date" id="dp3">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", id = "date-daily", onselect = "$('#frmDate').submit()" } })
            </div>
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $(function () {
     
        var hiddenFieldID = "input[id$='Date']";
        var fromdate = $(hiddenFieldID).val();
        var formattedDate = new Date(fromdate);
        var d = formattedDate.getDate();
        var m = formattedDate.getMonth();
        m += 1;  // JavaScript months are 0-11
        var y = formattedDate.getFullYear();
        if (d < 10) {
            d = "0" + d;
        }
        if (m < 10) {
            m = "0" + m;
        }
        var date = y + "-" + m + "-" + d;
        $("#date-daily").val(date);

        $('#dp3').datepicker({
            defaultDate: new Date(date),
            dateFormat: "yy-mm-dd",
            altFormat: 'yy/mm/dd',
            minDate: 0,
            showOtherMonths: true,
            firstDay: 1,
            onSelect: function (selectedDate, date, inst) {
                $('#Date').val(selectedDate);
                $('#date-daily').val(selectedDate);
                $(inst).trigger('change');
                $(this).change();
            }
        }).on("change", function () {  
            $('#frmDate').submit();
        });
     });


    //To get selected value an text of dropdownlist
    function SelectedValue(ddlObject) {
        var selectedValue = ddlObject.value;
        $("#HouseID").val(selectedValue)
    }

</script>